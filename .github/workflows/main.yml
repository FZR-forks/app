name: Run tests & Publish to Docker Registry

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/FZR-forks/app-ci

      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # We need to checkout the repository in order for the "Create Sentry release" to work
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare version file
        run: |
          scripts/generate-build-info.sh ${{ github.sha }}
          cat app/build_info.py

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build image and publish to Docker Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      # If we have generated a tag, generate the changelog, send a notification to slack and create the GitHub release
      - name: Build Changelog
        id: build_changelog
        if: startsWith(github.ref, 'refs/tags/v')
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog_configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.build_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
